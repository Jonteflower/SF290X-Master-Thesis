import pandas as pd

def get_base_variables():
    # Example usage:
    m = 50    # number of time steps
    r = 0.1   # risk-free rate
    T = 0.2      # time to maturity
    sigma = 0.3 # variance of the underlying asset
    S0 = 100   # initial stock price
    K = 100    # strike price
    #B = 85     # barrier level
    trading_days = 250 # Number of trading days
    beta = 0.5826 # Constant value on beta
    #h_values = range(85, 100)
    H_init = 85
    q = 0
    
    return m, r, T, sigma, S0, K, trading_days, beta, H_init, q

def get_beta_values():
    
    # Use a dictionary of dictionaries for different sigma values
    beta_values_by_sigma = {
        0.2: {
            # These are the existing values for sigma = 0.2
            85: 0.5826,
            86: 0.5826,
            87: 0.5826,
            88: 0.5826,
            89: 0.5826,
            90: 0.5876999999999905,
            91: 0.5875999999999905,
            92: 0.5875999999999905,
            93: 0.5879999999999904,
            94: 0.5903999999999902,
            95: 0.5941999999999897,
            96: 0.6047999999999886,
            97: 0.6207999999999868,
            98: 0.6444999999999842,
            99: 0.6817999999999911,
        },
        0.25: {
            85: 0.5826,
            86: 0.5826,
            87: 0.5826,
            88: 0.5826,
            89: 0.5826,
            90: 0.5890999999999903,
            91: 0.5895999999999902,
            92: 0.5903999999999902,
            93: 0.5910999999999901,
            94: 0.5950999999999896,
            95: 0.6044999999999886,
            96: 0.6155999999999874,
            97: 0.6322999999999855,
            98: 0.6568999999999938,
            99: 0.6891999999999903,
        },
        0.3: {
            # These are the existing values for sigma = 0.3
            85: 0.5826,
            86: 0.5826,
            87: 0.5826,
            88: 0.5826,
            89: 0.5826,
            90: 0.5920999999999986,
            91: 0.5968999999999981,
            92: 0.6016999999999976,
            93: 0.6079999999999969,
            94: 0.6168999999999959,
            95: 0.628,
            96: 0.642,
            97: 0.658,
            98: 0.676,
            99: 0.701,
        },
        0.35: {
                85: 0.5826,
                86: 0.5826,
                87: 0.5826,
                88: 0.5826,
                89: 0.5826,
                90: 0.5900999999999902,
                91: 0.59209999999999,
                92: 0.5947999999999897,
                93: 0.6016999999999889,
                94: 0.6089999999999881,
                95: 0.6196999999999869,
                96: 0.6344999999999853,
                97: 0.6533999999999832,
                98: 0.673899999999992,
            },
            0.4: {
                    85: 0.5826,
                    86: 0.5826,
                    87: 0.5826,
                    88: 0.5826,
                    89: 0.5826,
                    90: 0.5902999999999902,
                    91: 0.5959999999999895,
                    92: 0.6015999999999889,
                    93: 0.6074999999999883,
                    94: 0.6170999999999872,
                    95: 0.6292999999999859,
                    96: 0.6429999999999844,
                    97: 0.6587999999999936,
                    98: 0.6782999999999915,
                    99: 0.7028999999999888,
                },
                0.45:{
                    85: 0.5826,
                    86: 0.5826,
                    87: 0.5826,
                    88: 0.5826,
                    89: 0.5826,
                    90: 0.5953999999999896,
                    91: 0.600399999999989,
                    92: 0.6057999999999885,
                    93: 0.6140999999999875,
                    94: 0.6237999999999865,
                    95: 0.6357999999999852,
                    96: 0.6503999999999835,
                    97: 0.664599999999993,
                    98: 0.6846999999999908,
                    99: 0.7055999999999885,
                },
                 0.5:{
                    85: 0.5826,
                    86: 0.5826,
                    87: 0.5826,
                    88: 0.5826,
                    89: 0.5826,    
                    90: 0.6002999999999891,
                    91: 0.6052999999999885,
                    92: 0.6118999999999878,
                    93: 0.6202999999999869,
                    94: 0.6306999999999857,
                    95: 0.6434999999999843,
                    96: 0.6564999999999939,
                    97: 0.6705999999999923,
                    98: 0.6888999999999903,
                    99: 0.7078999999999882,
                }
    }
    
    # Get the corresponding beta values object for the given sigma, with a default empty dict if not found
    return beta_values_by_sigma



def get_exact_values():
    
    correct_values = {
        85: 6.322,
        86: 6.306,
        87: 6.281,
        88: 6.242,
        89: 6.184,
        90: 6.098,
        91: 5.977,
        92: 5.810,
        93: 5.584,
        94: 5.288,
        95: 4.907,
        96: 4.427,
        97: 3.834,
        98: 3.126,
        99: 2.337  # Corrected value assuming OCR error
    }
    
    return correct_values

